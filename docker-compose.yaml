version: '3.7'

volumes:
  ct_server:
  ct_server_db:

networks:
  ct_demo_net:

services:
  ct_demo_server:
    container_name: ct_demo_server
    image: cherrytwist/server:v0.10.8-p2
    networks:
      - ct_demo_net
    environment:
      - AUTH_ENABLED
      - NODE_ENV
      - DATABASE_HOST
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - WAIT_HOSTS=db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - GRAPHQL_ENDPOINT_PORT=4000
      - IPFS_ENDPOINT=http://ct_ipfs_server:5001
      - IPFS_CLIENT_ENDPOINT=http://localhost:8080/ipfs
      - AUTH_ORY_KRATOS_ISSUER=http://oathkeeper:4455
      - AUTH_ORY_KRATOS_JWKS_URI=http://oathkeeper:4456/.well-known/jwks.json
    depends_on:
      - ct_demo_db
      - ct_demo_ipfs_server
    restart: always
    ports:
      - 4000:4000
    command: sh -c "/wait && /create_db.sh && npm run migration:run && npm start"
    volumes:
      - ct_server:/usr/src/app/config

  ct_demo_client:
    container_name: ct_demo_client
    image: cherrytwist/client-web:v0.7.5
    networks:
      - ct_demo_net
    environment:
      - REACT_APP_SENTRY_ENABLED
      - REACT_APP_FEEDBACK_URL
      - REACT_APP_SENTRY_PII_ENABLED
      - REACT_APP_SENTRY_ENDPOINT
      - REACT_APP_GRAPHQL_ENDPOINT
    ports:
      - 3000:80
    restart: always

  ct_demo_db:
    container_name: ct_demo_db
    image: mysql:8.0.11
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
    networks:
      - ct_demo_net
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ct_server_db:/var/lib/mysql

  ct_demo_ipfs_server:
    container_name: ct_demo_ipfs_server
    image: ipfs/go-ipfs
    networks:
      - ct_demo_net
    restart: always
    ports:
      - 4001:4001/tcp
      - 4002:4002/udp
      - 5001:5001
      - 8080:8080
    volumes:
      - /tmp/ipfs-docker-data:/data/ipfs

  ct_demo_oathkeeper:
    container_name: ct_demo_oathkeeper
    image: oryd/oathkeeper:v0.38
    depends_on:
      - ct_demo_kratos
    ports:
      - 4455:4455
      - 4456:4456
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    networks:
      - ct_demo_net
    volumes:
      - ./.build/ory/oathkeeper:/etc/config/oathkeeper

  ct_demo_kratos_migrate:
    container_name: ct_demo_kratos_migrate
    image: oryd/kratos:v0.6.1-alpha.1
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
    volumes:
      - ./.build/ory/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - ct_demo_net

  ct_demo_kratos:
    container_name: ct_demo_kratos
    depends_on:
      - ct_demo_kratos_migrate
    image: oryd/kratos:v0.6.1-alpha.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - SERVE_PUBLIC_BASE_URL=http://localhost:4433/
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./.build/ory/kratos:/etc/config/kratos
    networks:
      - ct_demo_net
