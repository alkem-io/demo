version: '2.4'

volumes:
  ct_server:
  ct_server_db:

networks:
  ct:

services:
  ct_demo_server:
    container_name: ct_demo_server
    image: cherrytwist/server:v0.10.8-p1
    networks:
      - ct
    environment:
      - DATABASE_HOST
      - MYSQL_DATABASE
      - MYSQL_ROOT_PASSWORD
      - WAIT_HOSTS
      - AUTH_ENABLED
      - LOGGING_LEVEL
      - LOGGING_PROFILING_ENABLED
      - LOGGING_CONSOLE_ENABLED
      - NODE_ENV=dev
      - IPFS_ENDPOINT
      - AUTH_DEMO_AUTH_ISSUER
      - AUTH_DEMO_AUTH_TOKEN_ENDPOINT
      - AUTH_DEMO_AUTH_CLIENT_SECRET
      - AUTH_AAD_IDENTITY_METADATA
      - AUTH_AAD_ISSUER
      - AUTH_AAD_AUTHORITY
    depends_on:
      - ct_demo_db
      - ct_demo_auth_provider
      - ct_demo_ipfs_server
    restart: always
    ports:
      - 4000:4000
    command: sh -c "/wait && /create_db.sh && npm run migration:run && npm start"
    volumes:
      - ct_server:/usr/src/app/config

  ct_demo_client:
    container_name: ct_demo_client
    image: cherrytwist/client-web:v0.7.8
    environment:
      - REACT_APP_SENTRY_ENABLED
      - REACT_APP_FEEDBACK_URL
      - REACT_APP_SENTRY_PII_ENABLED
      - REACT_APP_SENTRY_ENDPOINT
      - REACT_APP_GRAPHQL_ENDPOINT
    networks:
      - ct
    ports:
      - 3000:80
    restart: always

  ct_demo_db:
    container_name: ct_demo_db
    image: mysql:8.0.11
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
    networks:
      - ct
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ct_server_db:/var/lib/mysql

  ct_demo_ipfs_server:
    container_name: ct_demo_ipfs_server
    image: ipfs/go-ipfs
    networks:
      - ct
    restart: always
    ports:
      - 4001:4001/tcp
      - 4002:4002/udp
      - 5001:5001
      - 8080:8080
    volumes:
      - /tmp/ipfs-docker-data:/data/ipfs

  ct_demo_auth_provider:
    container_name: ct_demo_auth_provider
    image: cherrytwist/demo-auth:v0.1.8
    networks:
      - ct
    environment:
      - DATABASE_HOST
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=${MYSQL_AUTH_DATABASE}
      - WAIT_HOSTS
      - SECRET=${AUTH_DEMO_AUTH_CLIENT_SECRET}
    depends_on:
      - ct_demo_db
    restart: always
    ports:
      - 3002:3002
    command: sh -c "/wait && /create_db.sh && npm run start:prod"